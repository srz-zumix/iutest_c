language: cpp

compiler:
  - clang
  - gcc
 
before_install:
  - if [ "${CXX}" = 'g++' ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
  - sudo apt-get -qq update

install:
  # gcc 4.8
  - if [ "${CXX}" = 'g++' ] && [ "${USE_COVERAGE}" != 'lcov' ]; then sudo apt-get -qq install g++-4.8; fi
  - if [ "${CXX}" = 'g++' ] && [ "${USE_COVERAGE}" != 'lcov' ]; then sudo update-alternatives --install /usr/bin/gcc  gcc  /usr/bin/gcc-4.8 90; fi
  - if [ "${CXX}" = 'g++' ] && [ "${USE_COVERAGE}" != 'lcov' ]; then sudo update-alternatives --install /usr/bin/g++  g++  /usr/bin/g++-4.8 90; fi
  - if [ "${CXX}" = 'g++' ] && [ "${USE_COVERAGE}" != 'lcov' ]; then sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.8 90;  fi
  # gcov
  - if [ "${USE_COVERAGE}" = 'gcov' ]; then sudo easy_install cpp-coveralls; fi
  # lcov
  - if [ "${USE_COVERAGE}" = 'lcov' ]; then sudo apt-get install lcov rubygems; fi
  - if [ "${USE_COVERAGE}" = 'lcov' ]; then gem install lcoveralls; fi


script:
  - cd ./test
  #- if [ "${USE_COVERAGE}" = '1' ]; then make encode-utf8; fi
  - make all

after_success:
  # Coverage
  - if [ "${USE_COVERAGE}" = 'gcov' ]; then make send-gcoverage; fi
  - if [ "${USE_COVERAGE}" = 'lcov' ]; then make send-lcoverage; fi

matrix:
  include:
    - compiler: gcc
      env: USE_COVERAGE=gcov
